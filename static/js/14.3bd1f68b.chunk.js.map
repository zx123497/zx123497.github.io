{"version":3,"sources":["services/instance/axios.js","services/pttService.js","pages/Partner.js"],"names":["instance","axios","create","baseURL","headers","Accept","interceptors","request","use","error","Promise","reject","response","pttService","getArticles","a","get","data","postArticle","post","getArticle","id","deleteArticle","delete","putArticle","Partner","useState","list","setList","useEffect","then","res","console","log","style","height","display","justifyContent","alignItems","flexDirection","color","map","item","i","backgroundColor","padding","borderRadius","maxWidth","margin","fontSize","title","board","author","date","content"],"mappings":"2JAEMA,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,uCACTC,QAAS,CACL,eAAgB,mBAChBC,OAAQ,sBAKhBL,EAASM,aAAaC,QAAQC,KAC1B,SAACD,GACG,OAAOA,KAEX,SAACE,GACG,OAAOC,QAAQC,OAAOF,MAI9BT,EAASM,aAAaM,SAASJ,KAC3B,SAACI,GACG,OAAOA,KAEX,SAACH,GACG,OAAOC,QAAQC,OAAOF,MAIfT,QCgBAa,EA3CI,CACfC,YAAY,WAAD,4BAAE,4BAAAC,EAAA,+EAEkBd,EAAMe,IAAI,QAF5B,cAECJ,EAFD,yBAGEA,EAASK,MAHX,oGAAF,kDAAC,GAQZC,YAAY,WAAD,4BAAE,WAAOD,GAAP,eAAAF,EAAA,+EAEkBd,EAAMkB,KAAK,OAAQF,GAFrC,cAECL,EAFD,yBAGEA,EAASK,MAHX,oGAAF,mDAAC,GAQZG,WAAW,WAAD,4BAAE,WAAOC,GAAP,eAAAN,EAAA,+EAEmBd,EAAMe,IAAN,eAAkBK,IAFrC,cAEET,EAFF,yBAGGA,EAASK,MAHZ,oGAAF,mDAAC,GAQXK,cAAc,WAAD,4BAAE,WAAOD,GAAP,eAAAN,EAAA,+EAEgBd,EAAMsB,OAAN,eAAqBF,IAFrC,cAEDT,EAFC,yBAGAA,EAASK,MAHT,oGAAF,mDAAC,GAQdO,WAAW,WAAD,4BAAE,WAAOH,EAAIJ,GAAX,eAAAF,EAAA,+EAEmBd,EAAMsB,OAAN,eAAqBF,GAAMJ,GAF9C,cAEEL,EAFF,yBAGGA,EAASK,MAHZ,oGAAF,qDAAC,I,OCcAQ,UA/CC,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OANAC,qBAAU,WACNhB,EAAWC,cAAcgB,MAAK,SAACC,GAC3BC,QAAQC,IAAIF,GACZH,EAAQG,QAEb,IAEC,sBACIG,MAAO,CACHC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,UANvB,UASI,oBAAIL,MAAO,CAAEM,MAAO,QAApB,gCACA,8BACKb,EACGA,EAAKc,KAAI,SAACC,EAAMC,GAAP,OACL,sBACIT,MAAO,CACHU,gBAAiB,wBACjBC,QAAS,OACTC,aAAc,OACdC,SAAU,QACVC,OAAQ,QANhB,UAUI,qBAAKd,MAAO,CAAEM,MAAO,OAAQS,SAAU,UAAvC,SAAoDP,EAAKQ,QACzD,qBAAKhB,MAAO,CAAEM,MAAO,QAArB,SAAgCE,EAAKS,QACrC,qBAAKjB,MAAO,CAAEM,MAAO,QAArB,SAAgCE,EAAKU,SACrC,qBAAKlB,MAAO,CAAEM,MAAO,QAArB,SAAgCE,EAAKW,OACrC,qBAAKnB,MAAO,CAAEM,MAAO,QAArB,SAAgCE,EAAKY,YANhCX,MAUb","file":"static/js/14.3bd1f68b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://django-leo-web.herokuapp.com',\n    headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    },\n})\n\n// You can also use interceptors in an instance\ninstance.interceptors.request.use(\n    (request) => {\n        return request\n    },\n    (error) => {\n        return Promise.reject(error)\n    },\n)\n\ninstance.interceptors.response.use(\n    (response) => {\n        return response\n    },\n    (error) => {\n        return Promise.reject(error)\n    },\n)\n\nexport default instance\n","import axios from './instance/axios'\n\nconst pttService = {\n    getArticles: async () => {\n        try {\n            const response = await axios.get('/ptt')\n            return response.data\n        } catch (error) {\n            throw error\n        }\n    },\n    postArticle: async (data) => {\n        try {\n            const response = await axios.post('/ptt', data)\n            return response.data\n        } catch (error) {\n            throw error\n        }\n    },\n    getArticle: async (id) => {\n        try {\n            const response = await axios.get(`/ptt/${id}`)\n            return response.data\n        } catch (error) {\n            throw error\n        }\n    },\n    deleteArticle: async (id) => {\n        try {\n            const response = await axios.delete(`/ptt/${id}`)\n            return response.data\n        } catch (error) {\n            throw error\n        }\n    },\n    putArticle: async (id, data) => {\n        try {\n            const response = await axios.delete(`/ptt/${id}`, data)\n            return response.data\n        } catch (error) {\n            throw error\n        }\n    },\n}\n\nexport default pttService\n","import React, { useState, useEffect } from 'react'\nimport pttService from '../services/pttService'\nconst Partner = () => {\n    const [list, setList] = useState([])\n    useEffect(() => {\n        pttService.getArticles().then((res) => {\n            console.log(res)\n            setList(res)\n        })\n    }, [])\n    return (\n        <div\n            style={{\n                height: '100vh',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                flexDirection: 'column',\n            }}\n        >\n            <h1 style={{ color: '#FFF' }}>大家好</h1>\n            <div>\n                {list ? (\n                    list.map((item, i) => (\n                        <div\n                            style={{\n                                backgroundColor: 'rgba(255,255,255,0.3)',\n                                padding: '15px',\n                                borderRadius: '10px',\n                                maxWidth: '20rem',\n                                margin: '10px',\n                            }}\n                            key={i}\n                        >\n                            <div style={{ color: '#FFF', fontSize: '1.5rem' }}>{item.title}</div>\n                            <div style={{ color: '#FFF' }}>{item.board}</div>\n                            <div style={{ color: '#FFF' }}>{item.author}</div>\n                            <div style={{ color: '#FFF' }}>{item.date}</div>\n                            <div style={{ color: '#FFF' }}>{item.content}</div>\n                        </div>\n                    ))\n                ) : (\n                    <></>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Partner\n"],"sourceRoot":""}